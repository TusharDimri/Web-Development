Say we had 2 commits, version 1 and version 2 made to our local repository.Now, at this point we realize that we want to maybe try out something different, maybe build a new feature or just mess around with a new idea or concept. So, what we can do instead of continuing to commit to the master branch which is the main branch, we can also create a side branch.We can create as many branches we want and start commiting to these branches.We add some code and simultaneousl we can continue working on the main branch putting out all those essential updates or bits of code maintaining our mainproject and at the same time we can continue to update and work on the experimental branches. 

Now, we have 2 branches that are parallel to each other and they can be developed simultaneously. Now, if at some point in the future we decide that the experiment was really fruitful and the feature that we built in it was really great and we'd like to merge it back to the main branch then that can be done too. 

How this is done:

git branch "branch-name" : Create a new branch.

git branch : Check for branches(List all the branches).

git checkout "branch-name" : Move to the given branch.

To merge to master branch:
First, move to the master branch.
git merge "branch-name"

Check out the course tutorial to learn how to do these things in a remote repository in GitHub.